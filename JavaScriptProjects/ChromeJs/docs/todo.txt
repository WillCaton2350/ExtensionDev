{$Progress}

游릭 - Installed Node.js
游릭 - Installed Express.js 
游릭 - Served the static css file(s) to the UI from the Express.js api
游릭 - Served the html file(s) that is linked with the css file through the Express.js api 
游리 - Osascript is working 
    * (Needs to be linked to the opencv gesture tracking logic and not the start button)
    * (Is working but not as intended)
游리 - The app.js file that interacts with the MacOS is working. (With Osascript and connects to the html {Tested with start button & Volume at 50%})
游릭 - Localhost:30000/ is running 
    * (node api.js === activate server ) 

{$Upcoming}
游릭 - Connect the opencv.js logic in the activate() function
    * Initialize camera 
    * (Solution) Initialized camera inside of html video tag with mediapipe
游댮 - Test the gesture tracking logic 
    * (Test each of the landmarks once the camera is activated / initialized by the start button on the html page)
    * (That is on the html page with the app.js logic)
    * (Make sure that the gesture tracking logic is connected to the osascript)
游댮 - Download the necessary files from the Mediapipe GitHub repository:
    + hands_solution_packed_assets_loader.js
    + hands_solution_simd_wasm_bin.js
    + hands_solution_packed_assets_loader.tflite
        * Github link for the files: https://github.com/google/mediapipe
游댮 - Implement mediapipe api with javascript
    * possibly tensorflow.js and react.js
游댮 - Use tensorflow.js to create a custom handtracking module / library in javascript. 
    * How to create and use a custom hand tracking module in javascrip with tensorflow.js 
     + learn how to do it in python first. 

- Possible company name
 * Flick audio 
 * Audio Flick 
 * Flickr
 * etc...


{$Issues}

/* 
 - THIS IS THE BROKEN FUNCTION

 - THE ACTIVATE() FUNCTION WORKS WHEN I CONNECT IT DIRECTLY TO OSASCRIPT 

 - BUT THE ACTIVATE() FUNCTION DOESNT WORK WHEN I CALL THE OPENCV CAMERA INITIALIZATION FROM THAT SAME FUNCTION

 - TODO / UPCOMING:
  * GET THE ACTIVATE() FUNCTION TO INITIALIZE THE CAMERA
  * TEST THE GESTURE TRACKING LOGIC 
  * CONFIG THE OSASCRIPT MACOS INTERACTION
  * THE VIDEO TAG THAT IS SUPPOSED TO DISPLAY THE CAMERA FEED ISNT working
  * THE CAMERA ISNT BEING INITIALIZED ON START LIKE THE AUTOPLAY ATTRIBUTE SUGGESTS. 
  * ALSO, THE CAMERA ISNT EVEN TURNING ON WHEN THE PLAY BUTTON IS ACTIVATED 
   +  (SO I DONT THINK THAT THE BACKEND CAMERA FEED IS CONNECTED TO THE VIDEO TAG / WHICH IS ALSO WHY I SUGGESTED AN OSASCRIPT CONNECTION TO THE BACKEND THROUGH THE EXPRESS.JS API)
  * LINK THE PACKAGED EXTENSION TO THE MANIFEST.JSON FILE
  * (MANIFEST.JSON FILE IS THE DEFAULT METADATA FOR A SOON TO BE PUBLISHED CHROME EXTENSION)
*/
        function activate() {
            console.log("Button clicked!");
            /*if (!cap || !cap.isOpened()) {
                cap = new cv.VideoCapture();
                cap.open(0);
                cap.set(cv.CAP_PROP_FRAME_WIDTH, 640);
                cap.set(cv.CAP_PROP_FRAME_HEIGHT, 480);
                setTimeout(() => {
                    processVideo();
                }, 1000); */
            }
        //}